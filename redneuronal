from keras.models import Sequential
from keras.layers import Dense, Dropout
from keras.regularizers import l1, l2

# Crear el modelo
model = Sequential()

# Aumentar la cantidad de capas ocultas y neuronas
model.add(Dense(64, input_dim=4, activation='relu'))  # Primera capa oculta
model.add(Dense(64, activation='relu'))  # Segunda capa oculta
model.add(Dense(64, activation='relu'))  # Tercera capa oculta

# Cambiar la función de activación
model.add(Dense(1, activation='sigmoid'))  # Capa de salida

# Inicializar los pesos de manera adecuada
initializer = keras.initializers.GlorotUniform(seed=1)
model.add(Dense(64, kernel_initializer=initializer))

# Utilizar técnicas de regularización
model.add(Dropout(0.5))  # Dropout
model.add(Dense(64, kernel_regularizer=l1(0.01), bias_regularizer=l2(0.01)))  # L1/L2 regularization

# Compilar el modelo
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
