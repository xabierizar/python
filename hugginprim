from keras.models import Sequential
from keras.layers import Dense
from keras.optimizerss import Adam
from keras.utils import to_categorical
from sklearn.model_selection import train_test_split
import numpy as np

# Load the data
data = pd.read_csv('dataprim.csv')

# Preprocess the data
X = data.drop(['label'], axis=1)  # Features
y = data['label']  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# One-hot encode the target variable
y_train_onehot = to_categorical(y_train)
y_test_onehot = to_categorical(y_test)

# Define the model
model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X.shape[1],)))
model.add(Dense(32, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy'])

# Train the model
history = model.fit(X_train, y_train_onehot, epochs=50, batch_size=32, validation_data=(X_test, y_test_onehot))

# Predict the next block of numbers
predictions = model.predict(X_test)

# Print the results
print('Predicted block:', predictions)
